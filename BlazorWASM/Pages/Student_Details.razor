@page "/StudentDetails"
@using BlazorCRUD.Library
@inject NavigationManager nav
@inject HttpClient http

<h3>Student Details</h3>

<div class="container">
    <div class="raw">
        <div class="col-10">

            @if(Student == null)
            {
                <h2>
                    Loading.....
                </h2>
            }
            else{
                <table class="table">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Name</th>
                        <th scope="col">Father Name</th>
                        <th scope="col">MobileNo</th>
                        <th scope="col">Semester</th>
                        <th scope="col">Email</th>
                        <th scope="col">RollNumber</th>
                        <th scope="col">Action</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach(var item in Student)
                    {                  
                    <tr>
                        <th scope="row">@item.Id</th>
                        <td>@item.Name</td>
                        <td>@item.FatherName</td>
                        <td>@item.MobileNumber</td>
                        <td>@item.Semester</td>
                        <td>@item.Email</td>
                        <td>@item.RollNumber</td>
                        <td>
                             <button onclick="@(()=>DeleteRecordAsync(item.Id))" class="btn btn-danger">Delete</button>
                        </td>
                        <td>
                             <button onclick="@(()=>nav.NavigateTo($"EditStudent/{item.Id}"))" class="btn btn-primary">Update</button>
                        </td>
                                    
                    </tr>
                    }
                </tbody>
            </table>
            }
        </div>
    </div>
</div>

@code {
    public IEnumerable<Student> Student { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Student = await http.GetFromJsonAsync<IEnumerable<Student>>("https://localhost:7101/api/Students");
        }
        catch(Exception ex)
        {
            Console.WriteLine("The Error is: " + ex.ToString());
        }
    }
    private async Task DeleteRecordAsync(int Id)
    {
        await http.DeleteAsync("https://localhost:7101/api/Students/" + Id);
    }
}
